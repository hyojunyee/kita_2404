Task1_0508. title() 함수를 사용하지 않고 동일한 결과를 출력하세요.


wiyname = input('이름을 영어로 입력하세요 : ')
title_name = []
for i in wiyname.split():
    i = i[0].upper() + i[1:]
    title_name.append(i)

print(f"당신의 영어 이름의 첫글자를 대문자로 바꾸면 {' '.join(title_name)} 입니다")



Task2_0507. join 함수를 이용해서 ['a','b','c']을 아래와 같이 출력하세요.
a::b::c


li1 =  ['a','b','c']
print("::".join(li1))



Task3_0508. 다음을 수행하세요.
- 사용자로부터 문자열을 입력받습니다.
- 입력받은 문자열이 숫자로만 이루어져 있는지 확인합니다.
- 만약 숫자로만 이루어져 있다면, 그 숫자를 정수로 변환하여 100을 더한 결과를 출력합니다.
- 숫자가 아닌 문자가 포함되어 있다면, 사용자에게 숫자만 입력하라는 메시지를 출력합니다.
- 연산이 수행이 완료될 때까지 반복하고 수행이 완료되면 break 합니다. 


while True:
    txt = input("숫자로 이루어진 문자열을 입력해 주세요: ")
    if txt.isdigit() == True:
        i = int(txt) + 100
        print(i)
        break
    else:
        print("숫자만 입력해 주세요")





Task4_0508. 문자와 숫자로만 구성된 아이디만 유효한 규칙을 만들려고 한다. 아래 사항을 참조하여 프로그램을 작성하세요.
사용자로부터 문자열을 입력받습니다.
입력받은 문자열이 알파벳과 숫자로만 이루어져 있는지 확인합니다.
만약 조건을 만족한다면 "유효한 아이디입니다"라고 출력합니다.
그렇지 않다면, "아이디는 알파벳과 숫자만 포함할 수 있습니다"라고 메시지를 출력합니다.





Task5_0508. 코딩을 한줄로 작성해서 동일한 결과를 출력하세요.
list = []
for i in range(0,20,2):
    list.append(i*i)
print(list)





Task6_0508. 유닉스 타임스탬프를 받아서 해당 시간을 datetime.datetime 객체로 변환하고, 그 결과를 출력하는 사용자 함수를 작성하여 임의의 타임스탬프를 입력하여 결과를 출력하세요.





Task7_0508. datetime 객체를 문자열로 변환하는 사용자 함수를 작성하여 datetime 객체를 "YYYY-MM-DD HH:MM:SS" 형식의 문자열로 변환하고 출력하세요.





Task8_0508. 올해 경과된 날짜수 계산하세요.





Task9_0508. 현재 요일을 "2021-6-26 오늘은 토요일입니다."와 같은 형식으로 출력하세요.


import datetime
weekend_dick = {
    0 : '월요일',
    1 : '화요일',
    2 : '수요일',
    3 : '목요일',
    4 : '금요일',
    5 : '토요일',
    6 : '일요일'
}

now_datetime = datetime.datetime.now()
today = now_datetime.strftime('%Y-%m-%d')
week_number = now_datetime.weekday()
week_day = weekend_dick[week_number]
print(f'{today} 오늘은 {week_day}입니다.')



Task10_0508. 1에서 백만까지 더하는데 걸리는 프로그램 실행 시간을 밀리초(ms) 단위로 구하세요.(1ms=0.001초)
